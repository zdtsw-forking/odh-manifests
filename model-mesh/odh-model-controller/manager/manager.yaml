apiVersion: apps/v1
kind: Deployment
metadata:
  name: mm-odh-model-controller
  labels:
    control-plane: odh-model-controller
    app: odh-model-controller
spec:
  selector:
    matchLabels:
      control-plane: odh-model-controller
  replicas: 3
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: odh-model-controller
        app: odh-model-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - odh-model-controller
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
          image: controller:latest
          name: manager
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 64Mi
      serviceAccountName: odh-model-controller
      terminationGracePeriodSeconds: 10
